{"content": "\nIn concatenation operations, the values in brackets are concatenated first. Then the values are concatenated from the left to the right. Be careful when mixing character literals and integers in String concatenation operations:\n\n\n\n\n\n\n\n\nCode section 3.65: Concatenation operations.\n1 int one = '1';\n2 int zero = '0';\n3 \n4 System.out.println(\"120? \" + one + '2' + zero);\n\n\n\n\n\n\n\n\nConsole for Code section 3.66\n120? 49248\n\n\n\nThe unexpected results arise because '1' and '0' are converted twice. The expression is concatenated as such:\n\n\n\n\"120? \" + one + '2' + zero\n\n\n\"120? \" + 49 + '2' + 48\n\n\n\"120? 49\" + '2' + 48\n\n\n\"120? 492\" + 48\n\n\n\"120? 49248\"\n\none and zero are integers. So they store integer values. The integer value of '1' is 49 and the integer value of '0' is 48.\nSo the first concatenation concatenates \"120? \" and 49. 49 is first converted into String, yielding \"49\" and the concatenation returns the string \"120? 49\".\nThe second concatenation concatenates \"120? 49\" and '2'. '2' is converted into the String \"2\" and the concatenation returns the string \"120? 492\".\nThe concatenation between \"120? 492\" and '0' returns the string \"120? 49248\".\nThe code section 66 yields the desired result:\n\n\n\n\n\n\n\n\nCode section 3.66: Correct primitive type.\n1 char one = '1';\n2 char zero = '0';\n3 \n4 System.out.println(\"120? \" + one + '2' + zero);\n\n\n\n\n\n\n\n\nConsole for Code section 3.66\n120? 120\n\n\n\n\n\n Arithmetic expressions\n\nJava ProgrammingLiterals\n\nMethods \n", "heading": "Mixed Mode Operations"}