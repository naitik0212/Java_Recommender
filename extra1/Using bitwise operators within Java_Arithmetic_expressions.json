{"content": "\nJava has besides arithmetic operators a set of bit operators to manipulate the bits in a number, and a set of logical operators. The bitwise logical operators are\n\n\n\nOperator\n\nFunction\n\nValue ofx before\n\nExampleinput\n\nExampleoutput\n\nValue ofx after\n\n\n&\n\nBitwise AND\n\n7\n\nx&27\n\n3\n\n7\n\n\n|\n\nBitwise OR\n\n7\n\nx|27\n\n31\n\n7\n\n\n^\n\nBitwise XOR\n\n7\n\nx^27\n\n28\n\n7\n\n\n~\n\nBitwise inversion\n\n7\n\n~x\n\n-8\n\n7\n\nBesides these logical bitwise functions, there are also operators to assign numbers to variables (x = -5):\n\n\n\nOperator\n\nFunction\n\nExampleinput\n\nExample output\n\n\n&=\n\nAssign x bitwisely ANDed with another value to itself\n\nx &= 3\n\n3\n\n\n|=\n\nAssign x bitwisely ORed with another value to itself\n\nx |= 3\n\n-5\n\n\n^=\n\nAssign x bitwisely XORed with another value to itself\n\nx ^= 3\n\n-8\n\n\n <<=\n\nAssign x divided by another integer to itself\n\nx <<= 1\n\n-10\n\n\n >>=\n\nAssign x bitwisely negated with another value to itself\n\nx >>= 1\n\n-3\n\n\n >>>=\n\nAssign x bitwisely negated with another value to itself\n\nx >>>= 1\n\n2,305,843,009,213,693,949 (64 bit)\n\nThe shift operators are used to shift the bits to the left or right, which is also a quick way to multiply/divide by two:\n\n\n\nOperator\n\nFunction\n\nValue ofx before\n\nExampleinput\n\nExample output\n\nValue ofx after\n\n\n << \n\nLogical shift left\n\n-15\n\nx << 2\n\n-60\n\n-15\n\n\n >> \n\nArithmetic shift right\n\n-15\n\nx >> 3\n\n-2\n\n-15\n\n\n >>> \n\nLogical shift right\n\n-15\n\nx >>> 3\n\n2,305,843,009,213,693,937 (64 bit)\n\n-15\n\n\n\n Primitive Types\n\nJava ProgrammingArithmetic expressions\n\nLiterals \n", "heading": "Using bitwise operators within Java"}