{"content": "\nIf you are importing library packages and classes that reside in a .jar file, you must ensure that the file is in the current classpath (both at compile- and execution-time). Apart from this requirement, importing these packages and classes is the same as if they were in their full, expanded, directory structure.\n\nFor example, to compile and run a class from a project's top directory (that contains the two directories /source and /libraries) you could use the following command:\n\n\n\n\n\nCompilation\n$ javac -classpath libraries/lib.jar source/MainClass.java\n\n\nAnd then to run it, similarly:\n\n\n\n\n\nExecution\n$ java -classpath libraries/lib.jar source/MainClass\n\n\nThe above is simplified, and demands that MainClass be in the default package, or a package called source, which isn't very desirable.\n\nWith BlueJ just click on Tools, Preferences, Libraries, and add the .jar one by one.\n", "heading": "Importing packages from .jar files"}