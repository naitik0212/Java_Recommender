{"content": "\nUsing stylish fonts in your Java applets may be necessary to help keep your Java applets attractive.  The setFont() allows for either the font used throughout the applet to be defined or for one element's font to be set at a time.\n\nThe syntax for setting a font is setFont(<fontName>, <fontStyle>, <fontSize>).\n\nTo make every font in the applet plain, size 24 Times New Roman, the following code should be used:\n\n\n\n\n\nCode section 9.13: Font setting\n1 Font f = new Font(\"Times New Roman\", Font.PLAIN, 24);\n2 setFont(f);\n\n\nIt is not necessary to initialize the font and set the font through two different lines of code.\n\n\n\n\n\nCode section 9.14: Direct font setting\n1 setFont(new Font(\"Times New Roman\", Font.PLAIN, 24));\n\n\nHowever, to make the font of element a plain, size 24 Times New Roman, and element b italicized, size 28 Times New Roman, the following code should be used:\n\n\n\n\n\nCode section 9.15: Object font setting\n1 a.setFont(new Font(\"Times New Roman\", Font.PLAIN, 24));\n2 b.setFont(new Font(\"Times New Roman\", Font.ITALIC, 28));\n\n\nTo set the color of the fonts used in an applet, the setForeground(<color>) method is used.  This method already includes some predefined colors which can be used by calling, for example, setForeground(Color.white).  Here are all of the predefined colors:\n\nColor.black\nColor.blue\nColor.cyan\nColor.darkGray\nColor.gray\nColor.green\nColor.red\nColor.white\nColor.yellow\nTo create a custom color, the RGB values of the color can be passed in as the color parameter.  For example, if red were not a predefined color, one could use setForeground(new Color(255, 0, 0)) to define red.\n\nJust as font styles, font colors can be applied to separate elements.  The syntax follows the same pattern: a.setForeground(Color.white).\n", "heading": "Font"}