{"content": "\nWhitespace in Java is used to separate the tokens in a Java source file. Whitespace is required in some places, such as between access modifiers, type names and Identifiers, and is used to improve readability elsewhere.\n\nWherever whitespace is required in Java, one or more whitespace characters may be used. Wherever whitespace is optional in Java, zero or more whitespace characters may be used.\n\nJava whitespace consists of the\n\nspace character ' ' (0x20),\nthe tab character (hex 0x09),\nthe form feed character (hex 0x0c),\nthe line separators characters newline (hex 0x0a) or carriage return (hex 0x0d) characters.\nLine separators are special whitespace characters in that they also terminate line comments, whereas normal whitespace does not.\n\nOther Unicode space characters, including vertical tab, are not allowed as whitespace in Java.\n\nRequired Whitespace[edit]\nLook at the static method intValue:\n\n\n\n\n\nCode section 2.13: Method declaration\n1 private static int intValue(String data) {\n2   return Integer.parseInt(data);\n3 }\n\n\nWhitespace is required between private and static, between static and int, between int and intValue, and between String and data.\n\nIf the code is written like this:\n\n\n\n\n\nCode section 2.14: Collapsed code\n1 privatestaticint intValue(String data) {\n2   return Integer.parseInt(data);\n3 }\n\n\n...it means something completely different: it declares a method which has the return type privatestaticint It is unlikely that this type exists and the method is no longer static, so the above would result in a semantic error.\n", "heading": "Whitespace"}