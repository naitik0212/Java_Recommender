{"content": "\ninstanceof is a keyword.\n\nIt checks if an object reference is an instance of a type, and returns a boolean value;\n\nThe <object-reference> instanceof Object will return true for all non-null object references, since all Java objects are inherited from Object. instanceof will always return false if <object-reference> is null.\n\n<object-reference> instanceof TypeName\n\n\n\n\n\n\nclass Fruit\n {\n  //...\t\n } \n class Apple extends Fruit\n {\n  //...\n }\n class Orange extends Fruit\n {\n  //...\n }\n public class Test \n {\n    public static void main(String[] args) \n    {\n       Collection<Object> coll = new ArrayList<Object>();\n \n       Apple app1 = new Apple();\n       Apple app2 = new Apple();\n       coll.add(app1);\n       coll.add(app2);\n \n       Orange or1 = new Orange();\n       Orange or2 = new Orange();\n       coll.add(or1);\n       coll.add(or2);\n \n       printColl(coll);\n    }\n \n    private static String printColl( Collection<?> coll )\n    {\n       for (Object obj : coll)\n       {\n          if ( obj instanceof Object )\n          {\n             System.out.print(\"It is a Java Object and\");\n          }\n          if ( obj instanceof Fruit )\n          {\n             System.out.print(\"It is a Fruit and\");\n          }\n          if ( obj instanceof Apple )\n          {\n             System.out.println(\"it is an Apple\");\n          } \n          if ( obj instanceof Orange )\n          {\n             System.out.println(\"it is an Orange\");\n          }\n       }\n    }\n }\n\n\n\"It is a Java Object and It is a Fruit and it is an Apple\"\n\"It is a Java Object and It is a Fruit and it is an Apple\"\n\"It is a Java Object and It is a Fruit and it is an Orange\"\n\"It is a Java Object and It is a Fruit and it is an Orange\"\n\nNote that the instanceof operator can also be applied to interfaces. \nFor example, if the example above was enhanced with the interface\n\n\n\n\n\n\ninterface Edible \n{\n //...\n}\n\n\n\nand the classes modified such that they implemented this interface\n\n\n\n\n\n\nclass Orange extends Fruit implements Edible\n {\n  ...\n }\n\n\n\nwe could ask if our object were edible.\n\n\n\n\n\n\nif ( obj instanceof Edible )\n {\n   System.out.println(\"it is edible\");\n }\n\n", "heading": "instanceof"}