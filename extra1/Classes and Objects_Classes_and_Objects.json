{"content": "\nAn object-oriented program is built from objects. A class is a \"template\" that is used to create objects. The class defines the values the object can contain and the operations that can be performed on the object.\n\nAfter compilation, a class is stored on the file system in a '(class-name).class' file.\n\nThe class is loaded into memory when we are about to create the first object from that class, or when we call one of its static functions.\n\nDuring class loading all the class static variables are initialized. Also operations defined in a static { ... }  block are executed. Once a class is loaded it stays in memory, and the class static variables won't be initialized again.\n\nAfter the class is loaded into memory, objects can be created from that class. When an object is created, its member variables are initialized, but the class static variables are not.\n\nWhen there are no more references to an object, the garbage collector will destroy the object and free its memory, so that the memory can be reused to hold new objects.\n\n\n\n Coding conventions\n\nJava ProgrammingClasses and Objects\n\nDefining Classes \n", "heading": "Classes and Objects"}