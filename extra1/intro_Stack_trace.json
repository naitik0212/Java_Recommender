{"content": " \nStack Trace is a list of method calls from the point when the application was started to the point where the exception was thrown. The most recent method calls are at the top.\n \n\n\n\n\n\n\nCode listing 6.3: StackTraceExample.java\n 1 public class StackTraceExample {\n 2   public static void main(String[] args) {\n 3     method1();\n 4   }\n 5 \n 6   public static void method1() {\n 7     method11();\n 8   }\n 9 \n10   public static void method11() {\n11     method111();\n12   }\n13 \n14   public static void method111() {\n15     throw new NullPointerException(\"Fictitious NullPointerException\");\n16   }\n17 }\n\n\n\n\n\n\n\n\nOutput for Code listing 6.3\nException in thread \"main\" java.lang.NullPointerException: Fictitious NullPointerException\nat StackTraceExample.method111(StackTraceExample.java:15)\nat StackTraceExample.method11(StackTraceExample.java:11)\nat StackTraceExample.method1(StackTraceExample.java:7)\nat StackTraceExample.main(StackTraceExample.java:3)\n\n\n The stack trace can be printed to the standard error by calling the public void printStackTrace() method of an exception.\n From Java 1.4, the stack trace is encapsulated into an array of a java class called java.lang.StackTraceElement.\nThe stack trace element array returned by Throwable.getStackTrace() method. Each element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Typically, this is the point at which the throwable corresponding to the stack trace was created.\n A stack frame represents the following information:\n \n\n\n\nCode section 6.24: Stack frame.\n1 public StackTraceElement(String declaringClass,\n2                          String methodName,\n3                          String fileName,\n4                          int lineNumber);\n\n Creates a stack trace element representing the specified execution point.\n", "heading": "intro_Stack_trace"}