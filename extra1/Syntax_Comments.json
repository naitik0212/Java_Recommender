{"content": "\nThe comments in Java use the same syntax as in C++.\n\nAn end-of-line comment starts with two slashes and ends with the end of the line. This syntax can be used on a single line too.\n\n\n\n\n\nCode section 3.105: Slash-slash comment.\n1 // A comment to give an example\n2 \n3 int n = 10; // 10 articles\n\n\nA comment on several lines is framed with '/' + '*' and '*' + '/'.\n\n\n\n\n\nCode section 3.106: Slash-star comment in multiple lines.\n 1 /*\n 2  * This is a comment\n 3  * on several lines.\n 4  */\n 5 \n 6 /* This also works; slash-star comments may be on a single line. */\n 7 \n 8 /*\n 9 Disable debugging code:\n10 \n11 int a = 10;\n12 while (a-- > 0) System.out.println(\"DEBUG: tab[\"+a+\"]=\" + tab[a]);\n13 */\n\n\nBy convention, subsequent lines of slash-star comments begin with a star aligned under the star in the open comment sequence, but this is not required. Never nest a slash-star comment in another slash-star comment. If you accidentally nest such comments, you will probably get a syntax error from the compiler soon after the first star-slash sequence.\n\n\n\n\n\nCode section 3.107: Nested slash-star comment.\n1 /* This comment appears to contain /* a nested comment. */\n2  * The comment ends after the first star-slash and\n3  * everything after the star-slash sequence is parsed\n4  * as non-comment source.\n5  */\n\n\nIf you need to have the sequence */ inside a comment you can use html numeric entities: *&#47;.\n\nSlash-star comments may also be placed between any Java tokens, though not recommended:\n\n\n\n\n\nCode section 3.108: Inline slash-star comment.\n1 int i = /* maximum integer */ Integer.MAX_VALUE;\n\n\nHowever, comments are not parsed as comments when they occur in string literals.\n\n\n\n\n\nCode section 3.109: String literal.\n1 String text = \"/* This is not a comment. */\";\n\n\nIt results in a 33 character string.\n", "heading": "Syntax"}