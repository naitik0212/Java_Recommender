{"content": "\nThe super keyword allows access to the members of the superclass of a class, as you can use this to access the members of the current class.\nExample:\n\n\n\n\n\nCode listing 4.11: Plane.java\n1 public class Plane extends Vehicle {\n2     public Plane() {\n3         super();\n4     }\n5 }\n\n\nIn this example, the constructor of the Plane class calls the constructor of its superclass Vehicle. You can only use super to access the members of the superclass inside the child class. If you use it from another class, it accesses the superclass of the other class.\nThis keyword also allows you to explicitly access the members of the superclass, for instance, in the case where there is a method with the same name in your class (overriding, ...).\nExample\u00a0:\n\n\n\n\n\nCode listing 4.12: Vehicle.java\n1 public class Vehicle {\n2     // ...\n3     public void run() throws Exception {\n4         position += speed;\n5     }\n6 }\n\n\n\n\n\n\nCode listing 4.13: Plane.java\n 1 public class Plane extends Vehicle {\n 2     // ...\n 3     public void run() throws Exception {\n 4         if (0 < height) {\n 5            throw new Exception(\"A plane can't run in flight.\");\n 6         } else {\n 7            super.run();\n 8         }\n 9     }\n10 }\n\n\nSee also the Object Oriented Programming book about the inheritance concept.\n\n\n Defining Classes\n\nJava ProgrammingInheritance\n\nInterfaces \n", "heading": "The super keyword"}