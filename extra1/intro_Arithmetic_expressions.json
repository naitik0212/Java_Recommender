{"content": " In order to do arithmetic in Java, one must first declare at least one variable. Typically one declares a variable and assigns it a value before any arithmetic is done. Here's an example of declaring an integer variable:\n \n\n\n\nCode section 3.59: Variable assignation.\n1 int x = 5;\n\n After creating a variable, one can manipulate its value by using Java's operators: + (addition), - (subtraction), * (multiplication), / (integer division), % (modulo or remainder), ++ (pre- & postincrement by one), -- (pre- & postdecrement by one).\n \n\n\n\n\n\n\nCode listing 3.10: Operators.java\n 1 public class Operators {\n 2   public static void main(String[] args) {\n 3     int x = 5;\n 4     System.out.println(\"x = \" + x);\n 5     System.out.println();\n 6    \n 7     System.out.println(\"--- Addition             ---\");\n 8     x = 5;\n 9     System.out.println(\"x + 2 = \" + (x + 2));\n10     System.out.println(\"x = \" + x);\n11     System.out.println();\n12    \n13     System.out.println(\"--- Subtraction          ---\");\n14     x = 5;\n15     System.out.println(\"x - 4 = \" + (x - 4));\n16     System.out.println(\"x = \" + x);\n17     System.out.println();\n18    \n19     System.out.println(\"--- Multiplication       ---\");\n20     x = 5;\n21     System.out.println(\"x * 3 = \" + (x * 3));\n22     System.out.println(\"x = \" + x);\n23     System.out.println();\n24    \n25     System.out.println(\"--- (Integer) Division   ---\");\n26     x = 5;\n27     System.out.println(\"x / 2 = \" + (x / 2));\n28     System.out.println(\"x = \" + x);\n29     System.out.println();\n30    \n31     System.out.println(\"--- Modulo (Remainder)   ---\");\n32     x = 5;\n33     System.out.println(\"x % 2 = \" + (x % 2));\n34     System.out.println(\"x = \" + x);\n35     System.out.println();\n36    \n37     System.out.println(\"--- Preincrement by one  ---\");\n38     x = 5;\n39     System.out.println(\"++x   = \" + (++x  ));\n40     System.out.println(\"x = \" + x);\n41     System.out.println();\n42    \n43     System.out.println(\"--- Predecrement by one  ---\");\n44     x = 5;\n45     System.out.println(\"--x   = \" + (--x  ));\n46     System.out.println(\"x = \" + x);\n47     System.out.println();\n48    \n49     System.out.println(\"--- Postincrement by one ---\");\n50     x = 5;\n51     System.out.println(\"x++   = \" + (x++  ));\n52     System.out.println(\"x = \" + x);\n53     System.out.println();\n54    \n55     System.out.println(\"--- Postdecrement by one ---\");\n56     x = 5;\n57     System.out.println(\"x--   = \" + (x--  ));\n58     System.out.println(\"x = \" + x);\n59     System.out.println();\n60   }\n61 }\n\n\n\n\n\n\n\n\nConsole for Code listing 3.10\n\n\nx = 5\n\n--- Addition             ---\nx + 2 = 7\nx = 5\n\n--- Subtraction          ---\nx - 4 = 1\nx = 5\n\n--- Multiplication       ---\nx * 3 = 15\nx = 5\n\n--- (Integer) Division   ---\nx / 2 = 2\nx = 5\n\n--- Modulo (Remainder)   ---\nx\u00a0% 2 = 1\nx = 5\n\n--- Preincrement by one  ---\n++x   = 6\nx = 6\n\n--- Predecrement by one  ---\n--x   = 4\nx = 4\n\n--- Postincrement by one ---\nx++   = 5\nx = 6\n\n--- Postdecrement by one ---\nx--   = 5\nx = 4\n\n\n The division operator rounds towards zero: 5/2 is 2, and -5/2 is -2.\nThe remainder operator has the same sign as the left operand; it is defined such that ((a/b)*b) + (a%b) is always equal to a.\nThe preincrement, predecrement, postincrement, and postdecrement operators are special: they also change the value of the variable, by adding or subtracting one. The only difference is that preincrement/decrement returns the new value of the variable; postincrement returns the original value of the variable.\n Test your knowledge\nQuestion 3.8: Consider the following code:\n\n\n\n\n\nQuestion 3.8: Question8.java\n 1 public class Question8 {\n 2   public static void main(String[] args) {\n 3     int x = 10;\n 4     x = x + 10;\n 5     x = 2 * x;\n 6     x = x - 19;\n 7     x = x / 3;\n 8     System.out.println(x);\n 9   }\n10 }\n\n\nWhat will be printed in the standard output?\n\nAnswer\n\n\n\n\nOutput for Question 3.8\n7\n\n\nint x = 10; => 10\nx = x + 10; => 20\nx = 2 * x; => 40\nx = x - 19; => 21\nx = x / 3; => 7\n\n\n When using several operators in the same expression, one must consider Java's order of precedence. Java uses the standard PEMDAS (Parenthesis, Exponents, Multiplication and Division, Addition and Subtraction) order. When there are multiple instances of the same precedence, Java reads from left to right. Consider what the output of the following code would be:\n \n\n\n\n\n\n\nCode section 3.60: Several operators.\n1 System.out.println(10*5 + 100/10 - 5 + 7%2);\n\n\n\n\n\n\n\n\nConsole for Code section 3.60\n56\n\n\n The following chart shows how Java would compute this expression:\n \n\nFigure 3.1: Computation of an arithmetic expression in the Java programming language\n\n\n\n \nBesides performing mathematical functions, there are also operators to assign numbers to variables (each example again uses the variable initialized as x = 5):\n \n\n\n\n\n\n\nCode listing 3.11: Assignments.java\n 1 public class Assignments {\n 2   public static void main(String[] args) {\n 3     int x = 5;\n 4     x = 3;\n 5     System.out.println(\"Assignment                                       (x = 3) : \" + x);\n 6 \n 7     x = 5;\n 8     x += 5;\n 9     System.out.println(\"Assign x plus another integer to itself          (x += 5): \" + x);\n10 \n11     x = 5;\n12     x -= 4;\n13     System.out.println(\"Assign x minus another integer to itself         (x -= 4): \" + x);\n14 \n15     x = 5;\n16     x *= 6;\n17     System.out.println(\"Assign x multiplied by another integer to itself (x *= 6): \" + x);\n18 \n19     x = 5;\n20     x /= 5;\n21     System.out.println(\"Assign x divided by another integer to itself    (x /= 5): \" + x);\n22   }\n23 }\n\n\n\n\n\n\n\n\nConsole for Code listing 3.11\nAssignment                                       (x = 3)\u00a0: 3\nAssign x plus another integer to itself          (x += 5): 10\nAssign x minus another integer to itself         (x -= 4): 1\nAssign x multiplied by another integer to itself (x *= 6): 30\nAssign x divided by another integer to itself    (x /= 5): 1\n\n\n", "heading": "intro_Arithmetic_expressions"}