{"content": "\nThis means not doing things like:\n\n\n\n\n\nCode section 6.17: Declaring an exception.\n 1 String s = null;\n 2 while (something) {\n 3     if (something2) {\n 4         s = \"yep\";\n 5     }\n 6 }\n 7 \n 8 if (s != null) {\n 9     something3(s);\n10 }\n\n\nYou can replace this with:\n\n\n\n\n\nCode section 6.18: Declaring an exception.\n1 boolean done = false;\n2 \n3 while (!done && something) {\n4     if (something2) {\n5        done = true;\n6        something3(\"yep\");\n7     }\n8 }\n\n\nYou might also consider replacing null with \"\" in the first example, but default values bring about bugs caused by default values being left in place.  A NullPointerException is actually better, as it allows the runtime to tell you about the bug, rather than just continue with a default value.\n", "heading": "Minimize the use of the keyword 'null' in assignment statements"}