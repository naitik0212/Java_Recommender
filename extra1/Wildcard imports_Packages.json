{"content": "\nIt is possible to import an entire package, using an asterisk:\n\n\n\n\n\nCode section 3.89: Wildcard imports.\n1 import javax.swing.*;\n\n\nWhile it may seem convenient, it may cause problems if you make a typographical error.  For example, if you use the above import to use JFrame, but then type JFraim frame = new JFraim();, the Java compiler will report an error similar to \"Cannot find symbol: JFraim\".  Even though it seems as if it was imported,  the compiler is giving the error report at the first mention of JFraim, which is half-way through your code, instead of the point where you imported JFrame along with everything else in javax.swing.\n\nIf you change this to import javax.swing.JFraim; the error will be at the import instead of within your code.\n\nFurthermore, if you import javax.swing.*; and import java.util.*;, and javax.swing.Queue is later added in a future version of Java, your code that uses Queue (java.util) will fail to compile.  This particular example is fairly unlikely, but if you are working with non-Oracle libraries, it may be more likely to happen.\n", "heading": "Wildcard imports"}