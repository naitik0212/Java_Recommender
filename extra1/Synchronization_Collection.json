{"content": "\nSynchronization is important when you are running several threads. Beware, synchronization does not mean that your collection is thread-safe. A thread-safe collection is also called a concurrent collection. Most of the popular collection classes have implementations for both single thread and multiple thread environments. The non-synchronized implementations are always faster. You can use the non-synchronized implementations in multiple thread environments, when you make sure that only one thread updates the collection at any given time.\n\nA new Java JDK package was introduced at Java 1.5, that is java.util.concurrent.  This package supplies a few Collection implementations designed for use in multi-threaded environments.\n\nThe following table lists all the synchronized collection classes:\n\n\n\n\n\nsynchronized\n\nnon-synchronized\n\n\nList\n\njava.util.Vector\n\njava.util.ArrayList\n\n\njava.util.Stack\n\n\n\n\n\n\njava.util.LinkedList\n\n\njava.util.concurrent.CopyOnWriteArrayList\n\n\n\n\nSet\n\n\n\njava.util.TreeSet\n\n\n\n\njava.util.HashSet\n\n\n\n\njava.util.LinkHashSet\n\n\njava.util.concurrent.CopyOnWriteArraySet\n\n\n", "heading": "Synchronization"}