{"content": "\nActually, there are no two-dimensional arrays in Java. However, an array can contain any class of object, including an array:\n\n\n\n\n\nCode section 3.56: Two-dimensional arrays.\n1 String[][] twoDimArray = {{\"a\", \"b\", \"c\", \"d\", \"e\"},\n2                           {\"f\", \"g\", \"h\", \"i\", \"j\"},\n3                           {\"k\", \"l\", \"m\", \"n\", \"o\"}};\n4 \n5 int[][] twoDimIntArray = {{ 0,  1,  2,  3,  4},\n6                           {10, 11, 12, 13, 14},\n7                           {20, 21, 22, 23, 24}};\n\n\nIt's not exactly equivalent to two-dimensional arrays because the size of the sub-arrays may vary. The sub-array reference can even be null. Consider:\n\n\n\n\n\nCode section 3.57: Weird two-dimensional array.\n1 String[][] weirdTwoDimArray = {{\"10\", \"11\", \"12\"},\n2                                null,\n3                                {\"20\", \"21\", \"22\", \"23\", \"24\"}};\n\n\nNote that the length of a two-dimensional array is the number of one-dimensional arrays it contains. In the above example, weirdTwoDimArray.length is 3, whereas weirdTwoDimArray[2].length is 5.\n\nIn the code section 3.58, we defined an array that has three elements, each element contains an array having 5 elements. We could create the array having the 5 elements first and use that one in the initialize block.\n\n\n\n\n\nCode section 3.58: Included array.\n1 String[] oneDimArray = {\"00\", \"01\", \"02\", \"03\", \"04\"};\n2 String[][] twoDimArray = {oneDimArray,\n3                           {\"10\", \"11\", \"12\", \"13\", \"14\"},\n4                           {\"20\", \"21\", \"22\", \"23\", \"24\"}};\n\n", "heading": "Two-Dimensional Arrays"}