{"content": " \nNullPointerException is a RuntimeException. In Java, a special null value can be assigned to an object reference.\nNullPointerException is thrown when an application attempts to use an object reference that has the null value.\nThese include:\n Calling an instance method on the object referred by a null reference.\nAccessing or modifying an instance field of the object referred by a null reference.\nIf the reference type is an array type, taking the length of a null reference.\nIf the reference type is an array type, accessing or modifying the slots of a null reference.\nIf the reference type is a subtype of Throwable, throwing a null reference. Applications should throw instances of this class to indicate other illegal uses of the null object.\n \n\n\n\nCode section 6.13: Null pointer.\n1 Object obj = null;\n2 obj.toString();  // This statement will throw a NullPointerException\n\n The above code shows one of the pitfalls of Java and the most common source of bugs. No object is created and the compiler does not detect it. NullPointerException is one of the most common exceptions thrown in Java.\n", "heading": "intro_Preventing_NullPointerException"}